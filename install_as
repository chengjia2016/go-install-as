#!/bin/bash
set -e

VERSION="0.1.2"
TMP_DIR="/tmp"
SOURCE_DIR=`pwd`
IMPORT_AS=`basename $SOURCE_DIR`
DESTINATION_DIR=`echo $GOPATH | awk -F: '{print $1}'`

function version()
{
    echo -e "go-install-as v$VERSION"
}

function usage()
{
    version
    echo -e ""
    echo -e "'go install' a package under a specific import path"
    echo -e ""
    echo -e "\t--tmp-dir=$TMP_DIR"
    echo -e "\t--source-dir=$SOURCE_DIR"
    echo -e "\t--import-as=$IMPORT_AS"
    echo -e "\t--destination-dir=$DESTINATION_DIR"
    echo -e "\t--version"
    echo -e "\t--help"
}

while [ "$1" != "" ]; do
    PARAM=`echo $1 | awk -F= '{print $1}'`
    VALUE=`echo $1 | awk -F= '{print $2}'`
    case $PARAM in
        -h | --help)
            usage
            exit
            ;;
        --version)
            version
            exit
            ;;
        --tmp-dir)
            TMP_DIR=$VALUE
            ;;
        --source-dir)
            SOURCE_DIR=$VALUE
            ;;
        --import-as)
            IMPORT_AS=$VALUE
            ;;
        --destination-dir)
            DESTINATION_DIR=$VALUE
            ;;
    esac
    shift
done

if [ ! -d $TMP_DIR ]; then
    echo "--tmp-dir must exist"
    exit 1
fi

if [ ! -d $SOURCE_DIR ]; then
    echo "--source-dir must exist"
    exit 1
fi

if [ ! -d $DESTINATION_DIR ]; then
    echo "--destination-dir must exist"
    exit 1
fi

rand_suffix=`cat /dev/urandom | LC_CTYPE=C tr -dc _A-Z-a-z-0-9 | head -c8`
working_dir="$TMP_DIR/go-install-as_$rand_suffix"
echo "working dir: $working_dir"
mkdir -p $working_dir

build_dir="$working_dir/src/$IMPORT_AS"
echo "build dir: $build_dir"
mkdir -p $build_dir

cp -R $SOURCE_DIR/* $build_dir
cd $build_dir
echo "go install'ing"
env GOPATH="$working_dir:$GOPATH" go install -x

goos=`go env GOOS`
goarch=`go env GOARCH`
pkg_dir="${goos}_${goarch}"
pkg_dest="$DESTINATION_DIR/pkg/$pkg_dir/"
echo "copying PKG to $pkg_dest"
cp -R $working_dir/pkg/$pkg_dir/* $pkg_dest

src_dest="$DESTINATION_DIR/src/"
echo "copying SRC to $src_dest"
cp -R $working_dir/src/* $src_dest

rm -rf "$working_dir"
